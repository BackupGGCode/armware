.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "ARMWARE" 1 "November 24, 2007" "" ""
.SH NAME
armware \- An ARM Emulator
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 8
\fBarmware\fR
.ad
.hy

.SH "COPYRIGHT"

.PP
Copyright 2003\-2007 Wei Hu <wei.hu.tw@gmail\&.com>\&. All rights reserved\&.

.SH "DESCRIPTION"

.PP
This manual page documents briefly the \fBarmware\fR emulator\&.

.PP
\fBarmware\fR is an emulator for ARM micro\-processor\&. It can only emulate Intel StrongARM SA\-1110 as core for now\&. However, ARMware emulates not only the Intel StrongARM cpu, but also Compaq iPaq H3600\&.

.PP
The hardware components that ARMware can emulate are:

.TP 3
1.
ARM architecture version 4 core
.TP
2.
Supports all kinds of ARM instruction set (but does not support Thumb instruction set)
.TP
3.
Supports all processor mode:

.RS
.TP 3
\(bu
User mode
.TP
\(bu
Fast Interrupt mode
.TP
\(bu
Interrupt mode
.TP
\(bu
Supervisor mode
.TP
\(bu
Abort mode
.TP
\(bu
Undefined Instruction mode
.TP
\(bu
System mode
.LP
.RE
.TP
4.
ARM standard system coprocessor (CP15)
.TP
5.
Memory Management Unit (MMU)
.TP
6.
Supports all kinds of address translation:

.RS
.TP 3
\(bu
Section translation
.TP
\(bu
Large page translation
.TP
\(bu
Small page translation
.TP
\(bu
Tiny page translation
.LP
.RE
.TP
7.
Supports all kinds of MMU fault:

.RS
.TP 3
\(bu
Translation fault
.TP
\(bu
Domain fault
.TP
\(bu
Access permission fault
.TP
\(bu
Alignemnt fault
.LP
.RE
.TP
8.
Translation Lookaside Buffer (TLB)

.RS
.TP 3
\(bu
In order to increase the performance, I use a hash table and fully associated TLB\&.
.LP
.RE
.TP
9.
LCD Controller
.TP
10.
DMA Controller
.TP
11.
EGPIO
.TP
12.
Operation System Timer
.TP
13.
Reset Controller
.TP
14.
Real Time Clock (RTC)
.TP
15.
GPIO Controll Block
.TP
16.
Interrupt Controller
.TP
17.
Power Management
.TP
18.
Supports idle mode
.TP
19.
Serial Port 1

.RS
.TP 3
\(bu
Connects to Atmel micro\-controller
.LP
.RE
.TP
20.
Serial Port 3

.RS
.TP 3
\(bu
Connects to Serial console
.LP
.RE
.TP
21.
Intel StrataFlash J3 Flash ROM

.RS
.TP 3
\(bu
Fully supports Common Flash Interface (CFI)
.TP
\(bu
Fully supports Write State Machine (WSM), including
.TP

.RS
.TP 3
\(bu
read array
.TP
\(bu
read ID codes
.TP
\(bu
block lock
.TP
\(bu
block unlock
.TP
\(bu
read status register
.TP
\(bu
read block register
.TP
\(bu
byte/word program
.TP
\(bu
write to buffer
.TP
\(bu
block erase
.LP
.RE
\(bu
Using GNU dbm as the ROM file database
.TP
\(bu
Using XML as the ROM file database
.LP
.RE
.TP
22.
Atmel micro\-controller
.TP
23.
Partially supports, including

.RS
.TP 3
\(bu
Get version information
.TP
\(bu
Get and Set LCD back light
.LP
.RE
.TP
24.
LCD screen

.RS
.TP 3
\(bu
Using Qt
.TP
\(bu
Using Gtk
.LP
.RE
.TP
25.
Touch panel
.LP

.SH "WEAK POINT"

.TP 3
1.
Its speed is slow because this version of ARMware is a pure interpreter emulator\&. However, I am working on how to add a dynamic re\-compiler into ARMware, and I hope ARMware will be faster via the dynamic re\-compiler\&. ARMware with a dynamic re\-compiler will be released in the next version\&.
.TP
2.
Doesn't support network\&.
.TP
3.
Doesn't support audio\&.
.LP

.SH "FEATURES"

.TP 3
1.
Althought ARMware is a pure interpreter emulator, I use assembly codes to re\-write parts of it to increase the run\-time performance\&. For example, I use MMX and SSE2 instructions to rotate an angle of 270 degrees of the LCD screen (That is to say, you have to execute ARMware in a CPU with SSE2 instruction sets, like Pentium M or Pentium 4)\&. In addition, I also use assembly codes to accomplish the condition codes setting of ARM\&.
.TP
2.
It can use Qt or Gtk as its user interface\&. However, because of the liscense of Qt, I could only release the version of ARMware using Gtk as its interface\&.
.TP
3.
It can use GNU dbm or xml as its machine database\&. However, because of the license of GNU dbm, I could only release the version of ARMware using xml as its machine database\&.
.TP
4.
Conform to the i18n\&.
.TP
5.
Contains a full functional utility to burn a new Flash ROM, which can be used to emulate the burning operations in the real world, and you can use the new created flash rom to start ARMware\&.
.TP
6.
Every user's machine database is placed under their home directory\&. Thus different users can have different machine database\&.
.LP

